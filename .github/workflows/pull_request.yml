on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

name: "GitHub Pages deployment for PRs"

env:
  PR_REPO_NAME: ${{ github.event.repository.name }}_${{ github.event.pull_request.node_id }}
  PR_COMMENT_TEXT_BEGIN: "Das Ergebnis des PRs kann unter "
  PR_COMMENT_TEXT_END: " eingesehen werden. ðŸ“–ðŸ‘€"

jobs:
  create_repository:
    name: "Create PR Repository"
    runs-on: ubuntu-latest
    steps:
      - name: "Create new repository for temporary deployment"
        uses: f1lander/create-repository-action@790b25d255717b5a81416a8390f3344396181805
        with:
          name: ${{ env.PR_REPO_NAME }}
          org: "fsbcg-ubt"
          private: false
          access-token: ${{ secrets.ORG_ADMIN_TOKEN }}

  build_gitbook:
    name: "Render GitBook"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: "Render book as GitBook"
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # v3.0.0
        with:
          image: fsbcgubt/docker-bookdown@sha256:958170419607ab75d841f4bb2049d8b3a39603af7a0a3af4e112aae0dbbb2884
          options: --mount src=${{ github.workspace }},target=/book,type=bind
          run: Rscript -e "bookdown::render_book('index.Rmd', 'bookdown::gitbook')"
      - name: "Upload artifact"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: _book_gitbook
          path: _book/

  deploy_gitbook:
    needs: [create_repository, build_gitbook]
    name: "Deploy GitBook to PR Repository"
    runs-on: ubuntu-latest
    environment:
      name: pull-request-staging
      url: https://fsbcg-ubt.github.io/${{ env.PR_REPO_NAME }}/
    steps:
      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      - name: "Set GitHub Actions as Commit Author"
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - name: "Checkout PR Repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: fsbcg-ubt/${{ env.PR_REPO_NAME }}
          token: ${{ secrets.ORG_ADMIN_TOKEN }}
      - name: "Download artifact"
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: _book_gitbook
      - name: "Push files to target"
        run: |
          touch .nojekyll
          git add .
          git commit -m $GITHUB_SHA
          git branch -M gh-pages
          git push -u origin gh-pages --force

  create_deployment_comment:
    needs: deploy_gitbook
    name: "Create comment with GH Pages URL"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@58d7008c60bc638cd07845c89db844ed32ee7014
        with:
          github-token: ${{ secrets.ORG_ADMIN_TOKEN }}
          script: |
            const commentBody = "${{ env.PR_COMMENT_TEXT_BEGIN }}https://fsbcg-ubt.github.io/${{ env.PR_REPO_NAME }}/${{ env.PR_COMMENT_TEXT_END }}"

            let commentFound = false
            await github.paginate(github.rest.issues.listComments, {
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo
            })
            .then((comments) => {
              for (const comment of comments) {
                if (comment.body.includes("https://fsbcg-ubt.github.io/${{ env.PR_REPO_NAME }}")) {
                  commentFound = true
                }
              }
            })

            if (true == commentFound) {
              return
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })